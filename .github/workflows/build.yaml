name: Build
on:
  pull_request:
  push:
    branches: [ main ]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        # include:
        #   - os: [self-hosted, ARM64]
        #   - os: [self-hosted, ARMHF]
    name: Make
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ contains(matrix.os, 'self-hosted') }}
    steps:
    - name: Set up Go.
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17
      id: go
    - name: Install Windows-specific packages
      run: "choco install --no-progress -y make zip unzip curl"
      if: ${{ contains(matrix.os, 'windows') }}
    - name: Install macOS-specific packages
      run: "sudo xcode-select -r"
      if: ${{ contains(matrix.os, 'macos') }}
    - name: Install Linux-specific packages
      run: "sudo apt install -y libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev"
      if: ${{ contains(matrix.os, 'ubuntu') }}
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build
      run: make
    - name: Upload Binary Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: |
          dist/**
        if-no-files-found: ignore
  publish:
    name: Stage And Publish Artifacts
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Download Binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries
        path: dist
    - name: Display structure of downloaded files
      run: ls -lR dist/
